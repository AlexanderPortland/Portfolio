//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use alohomora::policy::NoPolicy;
use sea_orm::entity::prelude::*;
use alohomora::bbox::BBox;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "parent")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: BBox<i32, NoPolicy>,
    pub candidate_id: BBox<i32, NoPolicy>,
    pub name: Option<BBox<String, NoPolicy>>,
    pub surname: Option<BBox<String, NoPolicy>>,
    pub telephone: Option<BBox<String, NoPolicy>>,
    pub email: Option<BBox<String, NoPolicy>>,
    pub created_at: BBox<DateTime, NoPolicy>,
    pub updated_at: BBox<DateTime, NoPolicy>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::candidate::Entity",
        from = "Column::CandidateId",
        to = "super::candidate::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Candidate,
}

impl Related<super::candidate::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Candidate.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
